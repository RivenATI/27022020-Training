Enquiry "AA.API.NOF.DEPOSIT.ARRANGEMENT.DETAILS.1.0.0" for "name:/AA_Channels:NOFILE.TC.AA.DEPOSIT#" {
    metamodelVersion: "1.30.6" full-description {
        en = "getDepositDetails"
    }

    start-line: 4
    end-line: 19 fixed-selection "DEPOSIT.DETAILS" {
    }

    custom-selection {

        field "ARRANGEMENT.ID" {
            label {
                en = "arrangementId"
            }

        }

        AND

        field "BALANCE.TYPES" {
            label {
                en = "balanceTypes"
            }

        }

        None
    }

    field "ARRANGMENT" {
        label {
            en = "arrangementId"
        }

        comments: "key"
        comma-separator: false
        position {
            column: 1
        }

        processing-mode: Single
        operation: field-number 0
        conversion: extract from 1 to 1 delimited by "*"
    }

    field "CURRENCY" {
        label {
            en = "currencyId"
        }

        comma-separator: false
        position {
            column: 2
        }

        processing-mode: Single
        operation: field-number 0
        conversion: extract from 2 to 1 delimited by "*"
    }

    field "START.DATE" {
        label {
            en = "startDate"
        }

        display-type: "DATE"
        comma-separator: false
        position {
            column: 3
        }

        processing-mode: Single
        operation: field-number 0
        conversion: extract from 3 to 1 delimited by "*"
    }

    field "MATURITY.DATE" {
        label {
            en = "maturityDate"
        }

        display-type: "DATE"
        comma-separator: false
        position {
            column: 4
        }

        processing-mode: Single
        operation: field-number 0
        conversion: extract from 4 to 1 delimited by "*"
    }

    field "MATURES.IN" {
        label {
            en = "maturesIn"
        }

        comma-separator: false
        position {
            column: 5
        }

        processing-mode: Single
        operation: field-number 0
        conversion: extract from 5 to 1 delimited by "*"
    }

    field "COOLING.DATE" {
        label {
            en = "coolingOffDate"
        }

        display-type: "DATE"
        comma-separator: false
        position {
            column: 6
        }

        processing-mode: Single
        operation: field-number 0
        conversion: extract from 6 to 1 delimited by "*"
    }

    field "TERM" {
        label {
            en = "term"
        }

        comma-separator: false
        position {
            column: 7
        }

        processing-mode: Single
        operation: field-number 0
        conversion: extract from 7 to 1 delimited by "*"
    }

    field "TERM.AMOUNT" {
        label {
            en = "termAmount"
        }

        display-type: "AMOUNT"
        comma-separator: false
        position {
            column: 8
        }

        processing-mode: Single
        operation: field-number 0
        conversion: extract from 8 to 1 delimited by "*"
    }

    field "TERM.CANCEL.PERIOD" {
        label {
            en = "cancellationPeriod"
        }

        comma-separator: false
        position {
            column: 9
        }

        processing-mode: Single
        operation: field-number 0
        conversion: extract from 9 to 1 delimited by "*"
    }

    field "CONSOLIDATE.CHARGE.TYPE" {
        label {
            en = "chargeType"
        }

        comments: "chargeTypes"
        comma-separator: false
        position {
            column: 10
        }

        processing-mode: Multi
        operation: field-number 0
        conversion: extract from 10 to 1 delimited by "*"
    }

    field "EARLY.REDEMPTION.FEE" {
        label {
            en = "earlyRedemptionFee"
        }

        display-type: "AMOUNT"
        comma-separator: false
        position {
            column: 11
        }

        processing-mode: Single
        operation: field-number 0
        conversion: extract from 11 to 1 delimited by "*"
    }

    field "WIDTHDRAWAL.FEE" {
        label {
            en = "withdrawalFee"
        }

        comma-separator: false
        position {
            column: 12
        }

        processing-mode: Single
        operation: field-number 0
        conversion: extract from 12 to 1 delimited by "*"
    }

    field "INTEREST.RATE" {
        label {
            en = "interestRate"
        }

        comma-separator: false
        position {
            column: 13
        }

        processing-mode: Single
        operation: field-number 0
        conversion: extract from 13 to 1 delimited by "*"
    }

    field "TOT.ACCR.AMOUNT" {
        label {
            en = "accrualAmount"
        }

        display-type: "AMOUNT"
        comma-separator: false
        position {
            column: 14
        }

        processing-mode: Single
        operation: field-number 0
        conversion: extract from 14 to 1 delimited by "*"
    }

    field "MATURITY.ACCRUED.INTEREST" {
        label {
            en = "accruedInterest"
        }

        display-type: "AMOUNT"
        format: Currency "CURRENCY" negative-pattern -#
        comma-separator: false
        position {
            column: 15
        }

        processing-mode: Single
        operation: field-number 0
        conversion: extract from 15 to 1 delimited by "*"
    }

    field "TAX.RATE" {
        label {
            en = "taxRate"
        }

        comments: "taxRates"
        comma-separator: false
        position {
            column: 16
        }

        processing-mode: Multi
        operation: field-number 0
        conversion: extract from 16 to 1 delimited by "*"
    }

    field "CONSOLIDATE.PAYMENT.FREQ" {
        label {
            en = "paymentFrequency"
        }

        comments: "charges"
        comma-separator: false
        position {
            column: 17
        }

        processing-mode: Multi
        operation: field-number 0
        conversion: extract from 17 to 1 delimited by "*"
    }

    field "CONSLIDATE.PAY.TYPE.DESC" {
        label {
            en = "paymentTypeName"
        }

        comments: "charges"
        comma-separator: false
        position {
            column: 18
        }

        processing-mode: Multi
        operation: field-number 0
        conversion: extract from 18 to 1 delimited by "*"
    }

    field "CONSOLIDATE.PRPTY.DESC" {
        label {
            en = "propertyName"
        }

        comments: "charges"
        comma-separator: false
        position {
            column: 19
        }

        processing-mode: Multi
        operation: field-number 0
        conversion: extract from 19 to 1 delimited by "*"
    }

    field "CONSOLIDATE.PAYMENT.METHOD" {
        label {
            en = "paymentMethod"
        }

        comments: "charges"
        comma-separator: false
        position {
            column: 20
        }

        processing-mode: Multi
        operation: field-number 0
        conversion: extract from 20 to 1 delimited by "*"
    }

    field "PAYMENT.VALUE" {
        label {
            en = "chargeSchedulePaymentValue"
        }

        comments: "charges"
        comma-separator: false
        position {
            column: 21
        }

        processing-mode: Multi
        operation: field-number 0
        conversion: extract from 21 to 1 delimited by "*"
    }

    field "PAYMENT.TYPE" {
        label {
            en = "paymentType"
        }

        comma-separator: false
        position {
            column: 22
        }

        processing-mode: Single
        operation: field-number 0
        conversion: extract from 22 to 1 delimited by "*"
    }

    field "PAYIN.SETTLEMENT" {
        label {
            en = "payinSettlement"
        }

        comments: "settlements"
        comma-separator: false
        position {
            column: 23
        }

        processing-mode: Multi
        operation: field-number 0
        conversion: extract from 23 to 1 delimited by "*"
    }

    field "PAYIN.ACCOUNT" {
        label {
            en = "payinAccountId"
        }

        comments: "settlements"
        comma-separator: false
        position {
            column: 24
        }

        processing-mode: Multi
        operation: field-number 0
        conversion: extract from 24 to 1 delimited by "*"
    }

    field "PAYOUT.SETTLEMENT" {
        label {
            en = "payoutSettlement"
        }

        comments: "settlements"
        comma-separator: false
        position {
            column: 25
        }

        processing-mode: Multi
        operation: field-number 0
        conversion: extract from 25 to 1 delimited by "*"
    }

    field "PAYOUT.ACCOUNT" {
        label {
            en = "payoutAccountId"
        }

        comments: "settlements"
        comma-separator: false
        position {
            column: 26
        }

        processing-mode: Multi
        operation: field-number 0
        conversion: extract from 26 to 1 delimited by "*"
    }

    field "PAYOUT.PROPERTY" {
        label {
            en = "propertyId"
        }

        comments: "settlements"
        comma-separator: false
        position {
            column: 27
        }

        processing-mode: Multi
        operation: field-number 0
        conversion: extract from 27 to 1 delimited by "*"
    }

    field "PAYOUT.PROPERTY.CLASS" {
        label {
            en = "propertyClassId"
        }

        comments: "settlements"
        comma-separator: false
        position {
            column: 28
        }

        processing-mode: Multi
        operation: field-number 0
        conversion: extract from 28 to 1 delimited by "*"
    }

    field "MATURITY.IN.DAYS" {
        label {
            en = "maturityInDays"
        }

        comma-separator: false
        position {
            column: 29
        }

        processing-mode: Single
        operation: field-number 0
        conversion: extract from 29 to 1 delimited by "*"
    }

    field "REMAINING.MATURITY.IN.DAYS" {
        label {
            en = "remainingMaturityInDays"
        }

        comma-separator: false
        position {
            column: 30
        }

        processing-mode: Single
        operation: field-number 0
        conversion: extract from 30 to 1 delimited by "*"
    }

    field "COMMITMENT.AMOUNT" {
        label {
            en = "commitmentAmount"
        }

        display-type: "AMOUNT"
        comma-separator: false
        position {
            column: 31
        }

        processing-mode: Single
        operation: field-number 0
        conversion: extract from 31 to 1 delimited by "*"
    }

    field "EXPECTED.BALANCE" {
        label {
            en = "expectedBalance"
        }

        display-type: "AMOUNT"
        comma-separator: false
        position {
            column: 32
        }

        processing-mode: Single
        operation: field-number 0
        conversion: extract from 32 to 1 delimited by "*"
    }

    field "WITHDRAW.FLAG" {
        label {
            en = "allowWithdrawal"
        }

        comma-separator: false
        position {
            column: 33
        }

        processing-mode: Single
        operation: field-number 0
        conversion: extract from 33 to 1 delimited by "*"
    }

    field "UNSPECIFIED.CREDIT" {
        label {
            en = "unspecifiedCredit"
        }

        display-type: "AMOUNT"
        comma-separator: false
        position {
            column: 34
        }

        processing-mode: Single
        operation: field-number 0
        conversion: extract from 34 to 1 delimited by "*"
    }

    field "FUNDDEPOSIT.FLAG" {
        label {
            en = "allowDeposit"
        }

        comma-separator: false
        position {
            column: 35
        }

        processing-mode: Single
        operation: field-number 0
        conversion: extract from 35 to 1 delimited by "*"
    }

    field "WITHDRAW.UNC.FLAG" {
        label {
            en = "allowWithdrawalUnclearedCredit"
        }

        comma-separator: false
        position {
            column: 36
        }

        processing-mode: Single
        operation: field-number 0
        conversion: extract from 36 to 1 delimited by "*"
    }

}